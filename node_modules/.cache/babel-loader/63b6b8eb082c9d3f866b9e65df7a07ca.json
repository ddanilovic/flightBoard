{"ast":null,"code":"var _jsxFileName = \"/home/corbu/Desktop/flightChartV1 (copy)/src/components/workers.js\";\nimport React, { useEffect } from \"react\";\nimport axios from \"axios\";\nimport Spinner from \"../ui/Spinner\";\n\nconst Workers = ({\n  showFlights,\n  setLoading,\n  loading,\n  workers,\n  setWorkers,\n  setFlights\n}) => {\n  useEffect(() => {\n    //fetch data when page loads\n    const fetchWorkers = async () => {\n      const result = await axios('https://interview-mock.herokuapp.com/api/workers');\n      setWorkers(result.data);\n      setLoading(false);\n    };\n\n    fetchWorkers();\n  }, []); // eslint-disable-line\n\n  console.log(Math.floor(778 / 60));\n  return loading ? /*#__PURE__*/React.createElement(Spinner, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }\n  }) : /*#__PURE__*/React.createElement(\"div\", {\n    className: \"flights\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }\n  }, workers.map(p => /*#__PURE__*/React.createElement(\"div\", {\n    className: \"name\",\n    key: p.id,\n    onClick: () => showFlights(p.id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 80\n    }\n  }, p.name))));\n};\n\nexport default Workers; // var hours = Math.floor(totalMinutes / 60);          \n// var minutes = totalMinutes % 60;","map":{"version":3,"sources":["/home/corbu/Desktop/flightChartV1 (copy)/src/components/workers.js"],"names":["React","useEffect","axios","Spinner","Workers","showFlights","setLoading","loading","workers","setWorkers","setFlights","fetchWorkers","result","data","console","log","Math","floor","map","p","id","name"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,eAApB;;AAEA,MAAMC,OAAO,GAAG,CAAC;AAACC,EAAAA,WAAD;AAAaC,EAAAA,UAAb;AAAwBC,EAAAA,OAAxB;AAAgCC,EAAAA,OAAhC;AAAwCC,EAAAA,UAAxC;AAAmDC,EAAAA;AAAnD,CAAD,KAAoE;AAE5ET,EAAAA,SAAS,CAAC,MAAM;AACd;AACA,UAAMU,YAAY,GAAG,YAAY;AAC/B,YAAMC,MAAM,GAAG,MAAMV,KAAK,CAAC,kDAAD,CAA1B;AACAO,MAAAA,UAAU,CAACG,MAAM,CAACC,IAAR,CAAV;AACAP,MAAAA,UAAU,CAAC,KAAD,CAAV;AACD,KAJD;;AAKAK,IAAAA,YAAY;AACb,GARQ,EAQN,EARM,CAAT,CAF4E,CAUpE;;AACRG,EAAAA,OAAO,CAACC,GAAR,CAAYC,IAAI,CAACC,KAAL,CAAW,MAAM,EAAjB,CAAZ;AACJ,SAAOV,OAAO,gBACV,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADU,gBAGV;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGC,OAAO,CAACU,GAAR,CAAaC,CAAD,iBACX;AAAK,IAAA,SAAS,EAAC,MAAf;AAAsB,IAAA,GAAG,EAAEA,CAAC,CAACC,EAA7B;AAAiC,IAAA,OAAO,EAAE,MAAMf,WAAW,CAACc,CAAC,CAACC,EAAH,CAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAmE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKD,CAAC,CAACE,IAAP,CAAnE,CADD,CADH,CAHJ;AAYH,CAxBD;;AA0BA,eAAejB,OAAf,C,CAEA;AACA","sourcesContent":["import React, {useEffect} from \"react\";\nimport axios from \"axios\";\nimport Spinner from \"../ui/Spinner\";\n\nconst Workers = ({showFlights,setLoading,loading,workers,setWorkers,setFlights}) => {\n\n        useEffect(() => {\n          //fetch data when page loads\n          const fetchWorkers = async () => {\n            const result = await axios('https://interview-mock.herokuapp.com/api/workers');\n            setWorkers(result.data);\n            setLoading(false);\n          };  \n          fetchWorkers()\n        }, []); // eslint-disable-line\n        console.log(Math.floor(778 / 60))\n    return loading ? ( \n        <Spinner />\n        ) : (\n        <div className=\"flights\">\n          {workers.map((p) => (\n            <div className=\"name\" key={p.id} onClick={() => showFlights(p.id)}><h4>{p.name}</h4></div>\n          ))}  \n          {/* <div>\n            <h4>{workers[0].name}</h4>\n          </div> */}\n        </div>\n    )\n}\n\nexport default Workers\n\n// var hours = Math.floor(totalMinutes / 60);          \n// var minutes = totalMinutes % 60;"]},"metadata":{},"sourceType":"module"}